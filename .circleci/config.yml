version: 2

jobs:
  # build the project and prepare it for deployment
  build:
    docker:
      - image: circleci/node:12.18.4-browsers
    working_directory: ~/nasa
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install
      # cache node modules
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
              - node_modules
      - run: npm run lint
      - run: npm run test
      - run: npm run build

      # Cache the dist folder for the deploy job
      - save_cache:
          key: v1-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist
            - .kubernetes
            - Dockerfile
    
  dockerize:
    machine: true
    working_directory: ~/nasa
    environment:
      IMAGE_NAME: feredean/node-api-starter-angular-app
    steps:
      - restore_cache:
          keys:
            - v1-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Push image to docker registry
          command: |
            docker build -t $IMAGE_NAME:$CIRCLE_SHA1 -t $IMAGE_NAME:latest .
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$CIRCLE_SHA1

  # pull the image from docker hub and deploy it to the k8s cluster
  deploy:
    docker:
      - image: feredean/circleci-kops:0.1.0
    environment:
      IMAGE_NAME: feredean/node-api-starter-angular-app
      KOPS_STATE_STORE: s3://k8s-explabs-io-state-store
    steps:
      - run:
          name: Deploy to k8s cluster
          command: |
            # Ensure AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY are set in the project's env vars
            kops export kubecfg --name k8s.explabs.io
            kubectl set image deploy/node-api-starter-angular-app node-api-starter-angular-app=$IMAGE_NAME:$CIRCLE_SHA1

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - dockerize:
          requires:
            - build
          filters:
            # only deploy when a commit hits the master branch
            branches:
              only: master
      - deploy:
          requires:
            - dockerize
          filters:
            branches:
              only: master
